{"version":3,"sources":["components/Search.js","components/Artist.js","components/Tracks.js","components/App.js","index.js"],"names":["Search","state","artistQuery","updateArtistQuery","event","_this","setState","target","value","handleKeyPress","key","searchArtist","props","react_default","a","createElement","onChange","this","onKeyPress","placeholder","onClick","Component","Artist","_ref","artist","images","name","followers","genres","total","join","style","witdh","height","borderRadius","objectFit","src","url","alt","Tracks","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","pause","play","trackIcon","track","preview_url","className","_this2","tracks","map","id","album","API_ADDRESS","App","fetch","concat","then","response","json","artists","items","catch","error","alert","message","console","log","components_Search","components_Artist","components_Tracks","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.86d3f09a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Search extends Component {\n  state = { artistQuery: '' };\n\n  updateArtistQuery = event => {\n    this.setState({ artistQuery: event.target.value });\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.searchArtist();\n    }\n  }\n\n  searchArtist = () => {\n    this.props.searchArtist(this.state.artistQuery);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={this.updateArtistQuery}\n          onKeyPress={this.handleKeyPress}\n          placeholder='Search for an Artist'\n        />\n        <button onClick={this.searchArtist}>Search</button>\n      </div>\n    )\n  }\n}\n\nexport default Search;\n","import React from 'react';\n\nconst Artist = ({artist}) => {\n  if (!artist) return null;\n  const {images, name, followers, genres} = artist;\n\n  return (\n    <div>\n      <h3>{name}</h3>\n      <p>{followers.total} followers</p>\n      <p>{genres.join(',')}</p>\n      <img style={{witdh: 200, height: 200, borderRadius: 100, objectFit: 'cover'}}src={images[0] && images[0].url} alt = \"arist-profile\"/>\n    </div>\n  )\n}\n\nexport default Artist;","import React, { Component } from 'react';\n\nclass Tracks extends Component {\n  state = { playing: false, audio: null, playingPreviewUrl: null };\n\n  playAudio = previewUrl => () => {\n    const audio = new Audio(previewUrl);\n\n    if (!this.state.playing) {\n      audio.play();\n      this.setState({ playing: true, audio, playingPreviewUrl: previewUrl });\n    } else {\n      this.state.audio.pause();\n\n      if (this.state.playingPreviewUrl === previewUrl) {\n        this.setState({ playing: false });\n      } else {\n        audio.play();\n        this.setState({ audio, playingPreviewUrl: previewUrl });\n      }\n    }\n  }\n\n  trackIcon = track => {\n    if (!track.preview_url) {\n      return <span>N/A</span>;\n    }\n\n    if (\n      this.state.playing &&\n      this.state.playingPreviewUrl === track.preview_url\n    ) {\n      return <span>| |</span>;\n    }\n\n    return <span className=\"test\">&#9654;</span>;\n  }\n\n  render() {\n    const { tracks } = this.props;\n\n    return (\n      <div>\n        {\n          tracks.map(track => {\n            const { id, name, album, preview_url } = track;\n\n            return (\n              <div\n                key={id}\n                onClick={this.playAudio(preview_url)}\n                className='track'\n              >\n                <img\n                  src={album.images[0].url}\n                  alt='track-image'\n                  className='track-image'\n                />\n                <p className='track-text'>{name}</p>\n                <p className='track-icon'>{this.trackIcon(track)}</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Tracks;\n","import React, { Component } from 'react';\nimport Search from './Search';\nimport Artist from './Artist';\nimport Tracks from './Tracks';\n\nconst API_ADDRESS = 'https://spotify-api-wrapper.appspot.com';\n\nclass App extends Component {\n  state = {artistQuery: '', artist: null, tracks: [] };\n\n  updateArtistQuery = event => {\n    this.setState({ artistQuery: event.target.value });\n  }\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.searchArtist();\n    }\n  }\n  searchArtist = artistQuery=> {\n    fetch(`${API_ADDRESS}/artist/${artistQuery}`)\n      .then(response => response.json())\n      .then(json => {\n        if (json.artists.total > 0) {\n          const artist = json.artists.items[0];\n          this.setState({artist});\n          fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`)\n            .then(response => response.json())\n            .then(json => this.setState({ tracks: json.tracks}))\n            .catch(error => alert(error.message));\n        }\n      })\n      .catch(error => alert(error.message));\n  }\n\n\n  render() {\n\n    console.log('this.state', this.state)\n    return (\n      <div>\n        <h2>Music Search App</h2>\n        <Search searchArtist={this.searchArtist}/>\n        <Artist artist={this.state.artist}/>\n        <Tracks tracks = {this.state.tracks}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}